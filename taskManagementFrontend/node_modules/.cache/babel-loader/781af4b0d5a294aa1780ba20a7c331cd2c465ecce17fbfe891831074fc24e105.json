{"ast":null,"code":"const API_URL=\"https://localhost:7228/api/tasks\";// Backend API URL for tasks\n// Fetch all tasks with error handling\nexport const fetchTasks=async()=>{try{const response=await fetch(API_URL);if(!response.ok){throw new Error('Network response was not ok');}return await response.json();// Convert response to JSON\n}catch(error){console.error('Error fetching tasks:',error);throw error;// Throw the error to be handled in the component\n}};// Create a new task with error handling\nexport const createTask=async task=>{try{const response=await fetch(API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(task)// Send the task as JSON\n});if(!response.ok){throw new Error('Failed to create task');}return await response.json();// Return the created task\n}catch(error){console.error('Error creating task:',error);throw error;// Throw error for further handling\n}};// Update an existing task with error handling\nexport const updateTask=async updatedTask=>{try{if(!updatedTask.id){throw new Error('Task ID is missing');}const response=await fetch(\"\".concat(API_URL,\"/\").concat(updatedTask.id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedTask)// Send updated task as JSON\n});if(!response.ok){throw new Error('Failed to update task');}// Handle empty response for 204 (no content)\nreturn response.status===204?{}:await response.json();}catch(error){console.error('Error updating task:',error);throw error;// Throw error for further handling\n}};// Delete a task with error handling\nexport const deleteTask=async id=>{try{if(!id){throw new Error('Task ID is missing');}const response=await fetch(\"\".concat(API_URL,\"/\").concat(id),{method:\"DELETE\"});if(!response.ok){throw new Error('Failed to delete task');}// Handle empty response for 200 (successful deletion)\nreturn response.status===200?{}:await response.json();}catch(error){console.error('Error deleting task:',error);throw error;// Throw error for further handling\n}};","map":{"version":3,"names":["API_URL","fetchTasks","response","fetch","ok","Error","json","error","console","createTask","task","method","headers","body","JSON","stringify","updateTask","updatedTask","id","concat","status","deleteTask"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/api.js"],"sourcesContent":["const API_URL = \"https://localhost:7228/api/tasks\"; // Backend API URL for tasks\r\n\r\n// Fetch all tasks with error handling\r\nexport const fetchTasks = async () => {\r\n  try {\r\n    const response = await fetch(API_URL);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();  // Convert response to JSON\r\n  } catch (error) {\r\n    console.error('Error fetching tasks:', error);\r\n    throw error;  // Throw the error to be handled in the component\r\n  }\r\n};\r\n\r\n// Create a new task with error handling\r\nexport const createTask = async (task) => {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(task),  // Send the task as JSON\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to create task');\r\n    }\r\n    return await response.json();  // Return the created task\r\n  } catch (error) {\r\n    console.error('Error creating task:', error);\r\n    throw error;  // Throw error for further handling\r\n  }\r\n};\r\n\r\n// Update an existing task with error handling\r\nexport const updateTask = async (updatedTask) => {\r\n  try {\r\n    if (!updatedTask.id) {\r\n      throw new Error('Task ID is missing');\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/${updatedTask.id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(updatedTask),  // Send updated task as JSON\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to update task');\r\n    }\r\n\r\n    // Handle empty response for 204 (no content)\r\n    return response.status === 204 ? {} : await response.json();  \r\n  } catch (error) {\r\n    console.error('Error updating task:', error);\r\n    throw error;  // Throw error for further handling\r\n  }\r\n};\r\n\r\n// Delete a task with error handling\r\nexport const deleteTask = async (id) => {\r\n  try {\r\n    if (!id) {\r\n      throw new Error('Task ID is missing');\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to delete task');\r\n    }\r\n\r\n    // Handle empty response for 200 (successful deletion)\r\n    return response.status === 200 ? {} : await response.json();  \r\n  } catch (error) {\r\n    console.error('Error deleting task:', error);\r\n    throw error;  // Throw error for further handling\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}