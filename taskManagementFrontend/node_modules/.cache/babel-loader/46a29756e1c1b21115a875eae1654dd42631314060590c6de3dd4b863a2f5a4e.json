{"ast":null,"code":"import _objectSpread from\"C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{createTask,updateTask}from\"../api\";// Import API functions for creating and updating tasks\nimport{TextField,Button,MenuItem,Select,InputLabel,FormControl}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskForm=_ref=>{let{onTaskCreated,taskToEdit,onEditComplete}=_ref;// Initialize state for task details. If editing, pre-fill with existing task data.\nconst[taskDetails,setTaskDetails]=useState({title:taskToEdit?taskToEdit.title:\"\",description:taskToEdit?taskToEdit.description:\"\",dueDate:taskToEdit?taskToEdit.dueDate:\"\",status:taskToEdit?taskToEdit.status:\"Pending\"// Default status is \"Pending\"\n});// Handle changes to input fields and update the taskDetails state.\nconst handleChange=e=>{const{name,value}=e.target;setTaskDetails(prevDetails=>_objectSpread(_objectSpread({},prevDetails),{},{[name]:value// Dynamically update the relevant field in the state\n}));};// Handle form submission for adding or editing a task.\nconst handleSubmit=async e=>{e.preventDefault();// Prevent the default form submission behavior\nconst{title,description,dueDate,status}=taskDetails;// Validate that all required fields are filled\nif(!title||!description||!dueDate){alert(\"Please fill all required fields!\");// Display an error message if validation fails\nreturn;}try{if(taskToEdit){// If editing an existing task\nconst updatedTask={id:taskToEdit.id,title,description,dueDate,status};const response=await updateTask(updatedTask);if(response){alert(\"Task updated successfully!\");// Show success message\nonEditComplete();// Trigger callback to close the form\n}}else{// If creating a new task\nconst newTask={title,description,dueDate,status};const createdTask=await createTask(newTask);if(createdTask){alert(\"Task created successfully!\");// Show success message\nonTaskCreated();// Trigger callback to refresh task list\nsetTaskDetails({// Reset form fields to default values\ntitle:\"\",description:\"\",dueDate:\"\",status:\"Pending\"});}}}catch(error){// Handle errors during API calls\nconsole.error(\"Error saving task:\",error);alert(\"An error occurred while saving the task. Please try again.\");}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit// Attach the form submission handler\n,style:{maxWidth:\"500px\",margin:\"auto\",backgroundColor:\"#FBFBFB\",padding:\"20px\",borderRadius:\"8px\",boxShadow:\"0 4px 8px rgba(0, 0, 0, 0.1)\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Task Title\",name:\"title\",value:taskDetails.title,onChange:handleChange,required:true,InputProps:{style:{backgroundColor:\"transparent\",borderRadius:\"5px\"}}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Task Description\",name:\"description\",value:taskDetails.description,onChange:handleChange,required:true,InputProps:{style:{backgroundColor:\"transparent\",borderRadius:\"5px\"}}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Due Date\",name:\"dueDate\",type:\"date\",value:taskDetails.dueDate,onChange:handleChange,required:true,InputLabelProps:{shrink:true// Ensure the label stays visible for date inputs\n},InputProps:{style:{backgroundColor:\"transparent\",borderRadius:\"5px\"}}})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{name:\"status\",value:taskDetails.status,onChange:handleChange,label:\"Status\",style:{backgroundColor:\"transparent\",borderRadius:\"5px\"},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Completed\",children:\"Completed\"})]})]})}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,style:{backgroundColor:\"#4A628A\",color:\"white\",borderRadius:\"5px\",padding:\"10px 0\",marginBottom:\"10px\"},onMouseOver:e=>e.target.style.backgroundColor=\"#3A4F73\"// Change color on hover\n,onMouseOut:e=>e.target.style.backgroundColor=\"#4A628A\",children:[taskToEdit?\"Edit Task\":\"Add Task\",\" \"]}),taskToEdit&&/*#__PURE__*/_jsx(Button,{onClick:()=>onEditComplete()// Trigger callback to cancel editing\n,variant:\"outlined\",color:\"secondary\",fullWidth:true,style:{borderColor:\"#4A628A\",color:\"#4A628A\",borderRadius:\"5px\",padding:\"10px 0\"},children:\"Cancel Edit\"})]});};export default TaskForm;","map":{"version":3,"names":["React","useState","createTask","updateTask","TextField","Button","MenuItem","Select","InputLabel","FormControl","jsx","_jsx","jsxs","_jsxs","TaskForm","_ref","onTaskCreated","taskToEdit","onEditComplete","taskDetails","setTaskDetails","title","description","dueDate","status","handleChange","e","name","value","target","prevDetails","_objectSpread","handleSubmit","preventDefault","alert","updatedTask","id","response","newTask","createdTask","error","console","onSubmit","style","maxWidth","margin","backgroundColor","padding","borderRadius","boxShadow","children","marginBottom","fullWidth","label","onChange","required","InputProps","type","InputLabelProps","shrink","variant","color","onMouseOver","onMouseOut","onClick","borderColor"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { createTask, updateTask } from \"../api\"; // Import API functions for creating and updating tasks\r\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl } from \"@mui/material\";\r\n\r\nconst TaskForm = ({ onTaskCreated, taskToEdit, onEditComplete }) => {\r\n  // Initialize state for task details. If editing, pre-fill with existing task data.\r\n  const [taskDetails, setTaskDetails] = useState({\r\n    title: taskToEdit ? taskToEdit.title : \"\",\r\n    description: taskToEdit ? taskToEdit.description : \"\",\r\n    dueDate: taskToEdit ? taskToEdit.dueDate : \"\",\r\n    status: taskToEdit ? taskToEdit.status : \"Pending\", // Default status is \"Pending\"\r\n  });\r\n\r\n  // Handle changes to input fields and update the taskDetails state.\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTaskDetails((prevDetails) => ({\r\n      ...prevDetails,\r\n      [name]: value, // Dynamically update the relevant field in the state\r\n    }));\r\n  };\r\n\r\n  // Handle form submission for adding or editing a task.\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n    const { title, description, dueDate, status } = taskDetails;\r\n\r\n    // Validate that all required fields are filled\r\n    if (!title || !description || !dueDate) {\r\n      alert(\"Please fill all required fields!\"); // Display an error message if validation fails\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (taskToEdit) {\r\n        // If editing an existing task\r\n        const updatedTask = { id: taskToEdit.id, title, description, dueDate, status };\r\n        const response = await updateTask(updatedTask);\r\n\r\n        if (response) {\r\n          alert(\"Task updated successfully!\"); // Show success message\r\n          onEditComplete(); // Trigger callback to close the form\r\n        }\r\n      } else {\r\n        // If creating a new task\r\n        const newTask = { title, description, dueDate, status };\r\n        const createdTask = await createTask(newTask);\r\n\r\n        if (createdTask) {\r\n          alert(\"Task created successfully!\"); // Show success message\r\n          onTaskCreated(); // Trigger callback to refresh task list\r\n          setTaskDetails({\r\n            // Reset form fields to default values\r\n            title: \"\",\r\n            description: \"\",\r\n            dueDate: \"\",\r\n            status: \"Pending\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Handle errors during API calls\r\n      console.error(\"Error saving task:\", error);\r\n      alert(\"An error occurred while saving the task. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} // Attach the form submission handler\r\n      style={{\r\n        maxWidth: \"500px\",\r\n        margin: \"auto\",\r\n        backgroundColor: \"#FBFBFB\",\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n      }}\r\n    >\r\n      {/* Input field for task title */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Task Title\"\r\n          name=\"title\"\r\n          value={taskDetails.title}\r\n          onChange={handleChange}\r\n          required\r\n          InputProps={{\r\n            style: { backgroundColor: \"transparent\", borderRadius: \"5px\" },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Input field for task description */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Task Description\"\r\n          name=\"description\"\r\n          value={taskDetails.description}\r\n          onChange={handleChange}\r\n          required\r\n          InputProps={{\r\n            style: { backgroundColor: \"transparent\", borderRadius: \"5px\" },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Input field for task due date */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Due Date\"\r\n          name=\"dueDate\"\r\n          type=\"date\"\r\n          value={taskDetails.dueDate}\r\n          onChange={handleChange}\r\n          required\r\n          InputLabelProps={{\r\n            shrink: true, // Ensure the label stays visible for date inputs\r\n          }}\r\n          InputProps={{\r\n            style: { backgroundColor: \"transparent\", borderRadius: \"5px\" },\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Dropdown for selecting task status */}\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Status</InputLabel>\r\n          <Select\r\n            name=\"status\"\r\n            value={taskDetails.status}\r\n            onChange={handleChange}\r\n            label=\"Status\"\r\n            style={{ backgroundColor: \"transparent\", borderRadius: \"5px\" }}\r\n          >\r\n            <MenuItem value=\"Pending\">Pending</MenuItem>\r\n            <MenuItem value=\"Completed\">Completed</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      {/* Submit button for adding or editing tasks */}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        style={{\r\n          backgroundColor: \"#4A628A\",\r\n          color: \"white\",\r\n          borderRadius: \"5px\",\r\n          padding: \"10px 0\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n        onMouseOver={(e) => (e.target.style.backgroundColor = \"#3A4F73\")} // Change color on hover\r\n        onMouseOut={(e) => (e.target.style.backgroundColor = \"#4A628A\")}\r\n      >\r\n        {taskToEdit ? \"Edit Task\" : \"Add Task\"} {/* Change button text based on the mode */}\r\n      </Button>\r\n\r\n      {/* Cancel button for editing mode */}\r\n      {taskToEdit && (\r\n        <Button\r\n          onClick={() => onEditComplete()} // Trigger callback to cancel editing\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          style={{\r\n            borderColor: \"#4A628A\",\r\n            color: \"#4A628A\",\r\n            borderRadius: \"5px\",\r\n            padding: \"10px 0\",\r\n          }}\r\n        >\r\n          Cancel Edit\r\n        </Button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}