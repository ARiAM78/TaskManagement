{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\nimport { useTranslation } from 'react-i18next'; // Import translation hook\nimport \"./styleForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskCreated,\n  taskToEdit,\n  onEditComplete\n}) => {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation(); // Destructure translation functions\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  // Populate fields if editing a task\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title || \"\");\n      setDescription(taskToEdit.description || \"\");\n      setDueDate(taskToEdit.dueDate || \"\");\n      setStatus(taskToEdit.status || \"\");\n    } else {\n      resetFields(); // Reset fields when no task to edit\n    }\n  }, [taskToEdit]);\n  const resetFields = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setDueDate(\"\");\n    setStatus(\"\");\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const taskData = {\n      title,\n      description,\n      dueDate,\n      status\n    };\n    onTaskCreated(taskData); // Notify parent component\n    resetFields(); // Clear form after submission\n    if (taskToEdit) onEditComplete(); // Exit edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [taskToEdit ? t('editTask') : t('addTask'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: t('taskTitle'),\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: t('taskDescription'),\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        margin: \"normal\",\n        multiline: true,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: t('dueDate'),\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        margin: \"normal\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: t('status'),\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            flexGrow: 1,\n            marginRight: \"10px\"\n          },\n          children: taskToEdit ? t('save') : t('addTask')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), taskToEdit && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => {\n            onEditComplete();\n            resetFields();\n          },\n          style: {\n            flexGrow: 1\n          },\n          children: t('cancelEdit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"s+u3QYwO2+/yjCxs7jfTH2aERfo=\", false, function () {\n  return [useTranslation];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Box","Typography","useTranslation","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","taskToEdit","onEditComplete","_s","i18n","t","title","setTitle","description","setDescription","dueDate","setDueDate","status","setStatus","resetFields","handleSubmit","e","preventDefault","taskData","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","value","onChange","target","margin","required","multiline","rows","type","InputLabelProps","shrink","color","style","flexGrow","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\r\nimport { useTranslation } from 'react-i18next'; // Import translation hook\r\nimport \"./styleForm.css\";\r\n\r\nconst TaskForm = ({ onTaskCreated, taskToEdit, onEditComplete }) => {\r\n  const { i18n, t } = useTranslation(); // Destructure translation functions\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  // Populate fields if editing a task\r\n  useEffect(() => {\r\n    if (taskToEdit) {\r\n      setTitle(taskToEdit.title || \"\");\r\n      setDescription(taskToEdit.description || \"\");\r\n      setDueDate(taskToEdit.dueDate || \"\");\r\n      setStatus(taskToEdit.status || \"\");\r\n    } else {\r\n      resetFields(); // Reset fields when no task to edit\r\n    }\r\n  }, [taskToEdit]);\r\n\r\n  const resetFields = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setDueDate(\"\");\r\n    setStatus(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const taskData = {\r\n      title,\r\n      description,\r\n      dueDate,\r\n      status,\r\n    };\r\n\r\n    onTaskCreated(taskData); // Notify parent component\r\n    resetFields(); // Clear form after submission\r\n    if (taskToEdit) onEditComplete(); // Exit edit mode\r\n  };\r\n\r\n  return (\r\n    <Box className=\"task-form\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {taskToEdit ? t('editTask') : t('addTask')} {/* Translate title */}\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          fullWidth\r\n          label={t('taskTitle')}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          label={t('taskDescription')}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={3}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          label={t('dueDate')}\r\n          type=\"date\"\r\n          value={dueDate}\r\n          onChange={(e) => setDueDate(e.target.value)}\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          fullWidth\r\n          label={t('status')}\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n\r\n        <Box className=\"form-buttons\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ flexGrow: 1, marginRight: \"10px\" }}\r\n          >\r\n            {taskToEdit ? t('save') : t('addTask')}\r\n          </Button>\r\n          {taskToEdit && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                onEditComplete();\r\n                resetFields();\r\n              }}\r\n              style={{ flexGrow: 1 }}\r\n            >\r\n              {t('cancelEdit')}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}