{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, deleteTask } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport Button from \"@mui/material/Button\";\nimport { Container, Typography, List, ListItem, ListItemText } from \"@mui/material\"; // Added Material-UI components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Function to load tasks from the API\n  const loadTasks = async () => {\n    try {\n      const data = await fetchTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Failed to load tasks:\", error);\n    }\n  };\n\n  // Function to handle task creation\n  const handleTaskCreated = () => {\n    loadTasks();\n  };\n\n  // Function to handle task deletion\n  const handleTaskDelete = async id => {\n    try {\n      await deleteTask(id);\n      loadTasks();\n    } catch (error) {\n      console.error(\"Failed to delete task:\", error);\n    }\n  };\n\n  // Load tasks when the component is mounted\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskCreated: handleTaskCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          backgroundColor: '#fff',\n          marginBottom: 2,\n          borderRadius: 2,\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${task.title} - ${task.status}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => handleTaskDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","deleteTask","TaskForm","Button","Container","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","loadTasks","data","error","console","handleTaskCreated","handleTaskDelete","id","maxWidth","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onTaskCreated","map","task","sx","backgroundColor","marginBottom","borderRadius","boxShadow","primary","title","status","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTasks, deleteTask } from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Container, Typography, List, ListItem, ListItemText } from \"@mui/material\"; // Added Material-UI components\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Function to load tasks from the API\r\n  const loadTasks = async () => {\r\n    try {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to load tasks:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to handle task creation\r\n  const handleTaskCreated = () => {\r\n    loadTasks();\r\n  };\r\n\r\n  // Function to handle task deletion\r\n  const handleTaskDelete = async (id) => {\r\n    try {\r\n      await deleteTask(id);\r\n      loadTasks();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete task:\", error);\r\n    }\r\n  };\r\n\r\n  // Load tasks when the component is mounted\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Typography variant=\"h3\" align=\"center\" gutterBottom>\r\n        Task Management\r\n      </Typography>\r\n      <TaskForm onTaskCreated={handleTaskCreated} />\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <ListItem key={task.id} sx={{ backgroundColor: '#fff', marginBottom: 2, borderRadius: 2, boxShadow: 1 }}>\r\n            <ListItemText \r\n              primary={`${task.title} - ${task.status}`} \r\n            />\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"error\" \r\n              onClick={() => handleTaskDelete(task.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}