{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, fetchTaskById, updateTask, deleteTask } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskItem from \"./components/TaskItem\"; // Import TaskItem\nimport { Typography, Container } from \"@mui/material\";\nimport SideMenu from \"./components/SideMenu\";\nimport { useTranslation } from 'react-i18next';\nimport \"./index.css\";\nimport './i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [lang, setLang] = useState(\"en\");\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // Fetch tasks when component mounts\n  useEffect(() => {\n    const getTasks = async () => {\n      try {\n        const data = await fetchTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    getTasks();\n  }, []);\n\n  // Update task list after creating or editing a task\n  const handleTaskCreatedOrUpdated = async task => {\n    try {\n      await updateTask(task); // Update task via API\n      const data = await fetchTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Fetch task for editing\n  const handleTaskEdit = async taskId => {\n    try {\n      const task = await fetchTaskById(taskId);\n      setTaskToEdit(task);\n    } catch (error) {\n      console.error(\"Error fetching task for editing:\", error);\n    }\n  };\n\n  // Clear task to edit after editing is complete\n  const handleEditComplete = () => {\n    setTaskToEdit(null);\n  };\n\n  // Change status of a task\n  const handleStatusChange = async (taskId, status) => {\n    try {\n      const updatedTask = tasks.find(task => task.id === taskId);\n      if (updatedTask) {\n        updatedTask.status = status;\n        await updateTask(updatedTask);\n        const data = await fetchTasks();\n        setTasks(data);\n      }\n    } catch (error) {\n      console.error(\"Error changing task status:\", error);\n    }\n  };\n\n  // Delete a task\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      const data = await fetchTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Toggle between English and Arabic languages\n  const toggleLanguage = () => {\n    const newLang = lang === \"en\" ? \"ar\" : \"en\";\n    setLang(newLang);\n    i18n.changeLanguage(newLang);\n    document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n  };\n\n  // Toggle side menu visibility\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n      menuOpen: menuOpen,\n      toggleMenu: toggleMenu,\n      toggleLanguage: toggleLanguage,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: i18n.t('taskManagement')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskCreatedOrUpdated: handleTaskCreatedOrUpdated,\n      taskToEdit: taskToEdit,\n      onEditComplete: handleEditComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onTaskEdit: handleTaskEdit,\n        onDeleteTask: handleDeleteTask,\n        onStatusChange: handleStatusChange,\n        i18n: i18n\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ezha8rg9ZuPeyDDUc5lTQs/s0Ac=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","fetchTaskById","updateTask","deleteTask","TaskForm","TaskItem","Typography","Container","SideMenu","useTranslation","jsxDEV","_jsxDEV","App","_s","i18n","tasks","setTasks","taskToEdit","setTaskToEdit","lang","setLang","menuOpen","setMenuOpen","getTasks","data","error","console","handleTaskCreatedOrUpdated","task","handleTaskEdit","taskId","handleEditComplete","handleStatusChange","status","updatedTask","find","id","handleDeleteTask","toggleLanguage","newLang","changeLanguage","document","body","dir","toggleMenu","maxWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","t","onTaskCreatedOrUpdated","onEditComplete","map","onTaskEdit","onDeleteTask","onStatusChange","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTasks, fetchTaskById, updateTask, deleteTask } from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskItem from \"./components/TaskItem\"; // Import TaskItem\r\nimport { Typography, Container } from \"@mui/material\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"./index.css\";\r\nimport './i18next';\r\n\r\nconst App = () => {\r\n  const { i18n } = useTranslation();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  const [lang, setLang] = useState(\"en\");\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  // Fetch tasks when component mounts\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      try {\r\n        const data = await fetchTasks();\r\n        setTasks(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n      }\r\n    };\r\n    getTasks();\r\n  }, []);\r\n\r\n  // Update task list after creating or editing a task\r\n  const handleTaskCreatedOrUpdated = async (task) => {\r\n    try {\r\n      await updateTask(task); // Update task via API\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch task for editing\r\n  const handleTaskEdit = async (taskId) => {\r\n    try {\r\n      const task = await fetchTaskById(taskId);\r\n      setTaskToEdit(task);\r\n    } catch (error) {\r\n      console.error(\"Error fetching task for editing:\", error);\r\n    }\r\n  };\r\n\r\n  // Clear task to edit after editing is complete\r\n  const handleEditComplete = () => {\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  // Change status of a task\r\n  const handleStatusChange = async (taskId, status) => {\r\n    try {\r\n      const updatedTask = tasks.find((task) => task.id === taskId);\r\n      if (updatedTask) {\r\n        updatedTask.status = status;\r\n        await updateTask(updatedTask);\r\n        const data = await fetchTasks();\r\n        setTasks(data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error changing task status:\", error);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      await deleteTask(id);\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  // Toggle between English and Arabic languages\r\n  const toggleLanguage = () => {\r\n    const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n    setLang(newLang);\r\n    i18n.changeLanguage(newLang);\r\n    document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n  };\r\n\r\n  // Toggle side menu visibility\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"app-container\">\r\n      <SideMenu\r\n        menuOpen={menuOpen}\r\n        toggleMenu={toggleMenu}\r\n        toggleLanguage={toggleLanguage}\r\n        lang={lang}\r\n      />\r\n\r\n      <Typography variant=\"h4\" gutterBottom>{i18n.t('taskManagement')}</Typography>\r\n\r\n      {/* Task form */}\r\n      <TaskForm\r\n        onTaskCreatedOrUpdated={handleTaskCreatedOrUpdated}\r\n        taskToEdit={taskToEdit}\r\n        onEditComplete={handleEditComplete}\r\n      />\r\n\r\n      {/* List of tasks */}\r\n      <div className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <TaskItem\r\n            key={task.id}\r\n            task={task}\r\n            onTaskEdit={handleTaskEdit}\r\n            onDeleteTask={handleDeleteTask}\r\n            onStatusChange={handleStatusChange}\r\n            i18n={i18n}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}