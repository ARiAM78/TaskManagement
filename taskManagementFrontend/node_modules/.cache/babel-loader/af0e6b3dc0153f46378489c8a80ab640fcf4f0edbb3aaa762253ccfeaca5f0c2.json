{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, fetchTaskById, createTask, updateTask, deleteTask } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskItem from \"./components/TaskItem\";\nimport SideMenu from \"./components/SideMenu\";\nimport { Typography, Container, Button, CircularProgress, Snackbar, Alert, AppBar, Toolbar } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsPDF } from \"jspdf\";\nimport \"./index.css\";\nimport \"./i18next\";\nimport \"./components/style.css\";\n\n// LoginPage Component for user selection\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  setUserRole\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Select a User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      onClick: () => setUserRole(\"admin\"),\n      children: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      onClick: () => setUserRole(\"user1\"),\n      children: \"User 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: () => setUserRole(\"user2\"),\n      children: \"User 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginPage;\nconst App = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n\n  // State for logged in user role; if null, user is not logged in\n  const [userRole, setUserRole] = useState(null);\n\n  // State for tasks and editing mode\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n\n  // States for loading and error handling\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // Additional states for language, side menu and selected entity\n  const [lang, setLang] = useState(\"en\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\n\n  // Logout handler: reset userRole to null to show the login page\n  const handleLogout = () => {\n    console.log(\"Logged out\");\n    setUserRole(null);\n  };\n\n  // Snackbar close handler\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Fetch tasks when component mounts or when the selected entity changes\n  useEffect(() => {\n    if (!userRole) return; // Don't fetch tasks if not logged in\n    const getTasks = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchTasks(selectedEntity);\n        setTasks(data);\n      } catch (error) {\n        setError(\"Error fetching tasks: \" + error.message);\n        setSnackbarOpen(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [selectedEntity, userRole]);\n\n  // Handle task creation\n  const handleTaskCreated = async task => {\n    try {\n      // Validate required fields\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\n        setError(\"All fields are required.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await createTask(task);\n      const updatedTasks = await fetchTasks(selectedEntity);\n      setTasks(updatedTasks);\n    } catch (error) {\n      setError(\"Failed to create task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Handle task update\n  const handleTaskUpdate = async updatedTask => {\n    try {\n      if (!updatedTask.id) {\n        setError(\"Task ID is required for update.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Failed to update task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Fetch task for editing\n  const handleTaskEdit = async taskId => {\n    try {\n      const task = await fetchTaskById(taskId);\n      setTaskToEdit(task);\n    } catch (error) {\n      setError(\"Error fetching task for editing: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Clears editing mode after updating\n  const handleEditComplete = () => {\n    setTaskToEdit(null);\n  };\n\n  // Toggle task status\n  const handleStatusChange = async (taskId, status) => {\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      if (!task) {\n        setError(\"Task not found.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      const updatedTask = {\n        ...task,\n        status\n      };\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Error updating task status: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Delete a task\n  const handleDeleteTask = async id => {\n    try {\n      if (!id) {\n        setError(\"Task ID is required for deletion.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await deleteTask(id);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Error deleting task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Function to generate and share task PDF via WhatsApp\n  const shareTask = async task => {\n    try {\n      const doc = new jsPDF();\n      doc.text(`Title: ${task.title}`, 10, 20);\n      doc.text(`Description: ${task.description}`, 10, 30);\n      doc.text(`Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`, 10, 40);\n      doc.text(`Status: ${task.status}`, 10, 50);\n      const pdfDataUri = doc.output(\"dataurlstring\");\n      const message = `*Task Details:*\\n` + `*Title:* ${task.title}\\n` + `*Due Date:* ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}\\n` + `*Status:* ${task.status}\\n\\n` + `*Download PDF:* ${pdfDataUri}`;\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(message)}`;\n      window.open(whatsappUrl, \"_blank\");\n    } catch (error) {\n      console.error(\"Error sharing task:\", error);\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // If user is not logged in, show the LoginPage\n  if (!userRole) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      setUserRole: setUserRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Main Task Management Page (when user is logged in)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: userRole === \"admin\" ? \"Admin Dashboard\" : `User Dashboard (${userRole})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n        menuOpen: menuOpen,\n        toggleMenu: () => setMenuOpen(!menuOpen),\n        toggleLanguage: () => {\n          const newLang = lang === \"en\" ? \"ar\" : \"en\";\n          setLang(newLang);\n          i18n.changeLanguage(newLang);\n          document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n        },\n        lang: lang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedEntity(e.target.value),\n        className: \"form-field\",\n        value: selectedEntity,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"User1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"User2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onTaskCreated: handleTaskCreated,\n        taskToEdit: taskToEdit,\n        onEditComplete: handleEditComplete,\n        onUpdateTask: handleTaskUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this) : tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task,\n          onEdit: handleTaskEdit,\n          onDelete: handleDeleteTask,\n          onStatusChange: handleStatusChange,\n          onShareTask: shareTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No tasks available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: handleSnackbarClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleSnackbarClose,\n          severity: \"error\",\n          sx: {\n            width: \"100%\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"qmvQFT6bBK18jXb3HqEKyteRyqk=\", false, function () {\n  return [useTranslation];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","fetchTaskById","createTask","updateTask","deleteTask","TaskForm","TaskItem","SideMenu","Typography","Container","Button","CircularProgress","Snackbar","Alert","AppBar","Toolbar","useTranslation","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","setUserRole","maxWidth","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","fullWidth","style","marginBottom","onClick","_c","App","_s","i18n","userRole","tasks","setTasks","taskToEdit","setTaskToEdit","loading","setLoading","error","setError","snackbarOpen","setSnackbarOpen","lang","setLang","menuOpen","setMenuOpen","selectedEntity","setSelectedEntity","handleLogout","console","log","handleSnackbarClose","getTasks","data","message","handleTaskCreated","task","title","description","dueDate","entityId","updatedTasks","handleTaskUpdate","updatedTask","id","handleTaskEdit","taskId","handleEditComplete","handleStatusChange","status","find","t","handleDeleteTask","shareTask","doc","text","split","pdfDataUri","output","whatsappUrl","encodeURIComponent","window","open","position","sx","flexGrow","toggleMenu","toggleLanguage","newLang","changeLanguage","document","body","dir","onChange","e","target","value","onTaskCreated","onEditComplete","onUpdateTask","length","map","onEdit","onDelete","onStatusChange","onShareTask","autoHideDuration","onClose","severity","width","_c2","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {fetchTasks,fetchTaskById,createTask,updateTask,deleteTask,} from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskItem from \"./components/TaskItem\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport {Typography,Container,Button,CircularProgress,Snackbar,Alert,AppBar,Toolbar,} from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"./index.css\";\r\nimport \"./i18next\";\r\nimport \"./components/style.css\";\r\n\r\n// LoginPage Component for user selection\r\nconst LoginPage = ({ setUserRole }) => {\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"app-container\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Select a User\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        style={{ marginBottom: \"1rem\" }}\r\n        onClick={() => setUserRole(\"admin\")}\r\n      >\r\n        Admin\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        style={{ marginBottom: \"1rem\" }}\r\n        onClick={() => setUserRole(\"user1\")}\r\n      >\r\n        User 1\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={() => setUserRole(\"user2\")}\r\n      >\r\n        User 2\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  // State for logged in user role; if null, user is not logged in\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  // State for tasks and editing mode\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n\r\n  // States for loading and error handling\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  // Additional states for language, side menu and selected entity\r\n  const [lang, setLang] = useState(\"en\");\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\r\n\r\n  // Logout handler: reset userRole to null to show the login page\r\n  const handleLogout = () => {\r\n    console.log(\"Logged out\");\r\n    setUserRole(null);\r\n  };\r\n\r\n  // Snackbar close handler\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  // Fetch tasks when component mounts or when the selected entity changes\r\n  useEffect(() => {\r\n    if (!userRole) return; // Don't fetch tasks if not logged in\r\n    const getTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await fetchTasks(selectedEntity);\r\n        setTasks(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching tasks: \" + error.message);\r\n        setSnackbarOpen(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getTasks();\r\n  }, [selectedEntity, userRole]);\r\n\r\n  // Handle task creation\r\n  const handleTaskCreated = async (task) => {\r\n    try {\r\n      // Validate required fields\r\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\r\n        setError(\"All fields are required.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await createTask(task);\r\n      const updatedTasks = await fetchTasks(selectedEntity);\r\n      setTasks(updatedTasks);\r\n    } catch (error) {\r\n      setError(\"Failed to create task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle task update\r\n  const handleTaskUpdate = async (updatedTask) => {\r\n    try {\r\n      if (!updatedTask.id) {\r\n        setError(\"Task ID is required for update.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Failed to update task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Fetch task for editing\r\n  const handleTaskEdit = async (taskId) => {\r\n    try {\r\n      const task = await fetchTaskById(taskId);\r\n      setTaskToEdit(task);\r\n    } catch (error) {\r\n      setError(\"Error fetching task for editing: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Clears editing mode after updating\r\n  const handleEditComplete = () => {\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  // Toggle task status\r\n  const handleStatusChange = async (taskId, status) => {\r\n    try {\r\n      const task = tasks.find((t) => t.id === taskId);\r\n      if (!task) {\r\n        setError(\"Task not found.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      const updatedTask = { ...task, status };\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Error updating task status: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      if (!id) {\r\n        setError(\"Task ID is required for deletion.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await deleteTask(id);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Error deleting task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Function to generate and share task PDF via WhatsApp\r\n  const shareTask = async (task) => {\r\n    try {\r\n      const doc = new jsPDF();\r\n      doc.text(`Title: ${task.title}`, 10, 20);\r\n      doc.text(`Description: ${task.description}`, 10, 30);\r\n      doc.text(\r\n        `Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`,\r\n        10,\r\n        40\r\n      );\r\n      doc.text(`Status: ${task.status}`, 10, 50);\r\n      const pdfDataUri = doc.output(\"dataurlstring\");\r\n      const message =\r\n        `*Task Details:*\\n` +\r\n        `*Title:* ${task.title}\\n` +\r\n        `*Due Date:* ${\r\n          task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"\r\n        }\\n` +\r\n        `*Status:* ${task.status}\\n\\n` +\r\n        `*Download PDF:* ${pdfDataUri}`;\r\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(\r\n        message\r\n      )}`;\r\n      window.open(whatsappUrl, \"_blank\");\r\n    } catch (error) {\r\n      console.error(\"Error sharing task:\", error);\r\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // If user is not logged in, show the LoginPage\r\n  if (!userRole) {\r\n    return <LoginPage setUserRole={setUserRole} />;\r\n  }\r\n\r\n  // Main Task Management Page (when user is logged in)\r\n  return (\r\n    <>\r\n      {/* App Bar with Logout button */}\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            {userRole === \"admin\"\r\n              ? \"Admin Dashboard\"\r\n              : `User Dashboard (${userRole})`}\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth=\"sm\" className=\"app-container\">\r\n        <SideMenu\r\n          menuOpen={menuOpen}\r\n          toggleMenu={() => setMenuOpen(!menuOpen)}\r\n          toggleLanguage={() => {\r\n            const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n            setLang(newLang);\r\n            i18n.changeLanguage(newLang);\r\n            document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n          }}\r\n          lang={lang}\r\n        />\r\n\r\n        {/* Entity Selection Dropdown */}\r\n        <select\r\n          onChange={(e) => setSelectedEntity(e.target.value)}\r\n          className=\"form-field\"\r\n          value={selectedEntity}\r\n        >\r\n          <option value=\"\">All Tasks</option>\r\n          <option value=\"1\">User1</option>\r\n          <option value=\"2\">User2</option>\r\n        </select>\r\n\r\n        {/* Task Form */}\r\n        <TaskForm\r\n          onTaskCreated={handleTaskCreated}\r\n          taskToEdit={taskToEdit}\r\n          onEditComplete={handleEditComplete}\r\n          onUpdateTask={handleTaskUpdate}\r\n        />\r\n\r\n        {/* Task List */}\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : tasks.length > 0 ? (\r\n          <div className=\"task-list\">\r\n            {tasks.map((task) => (\r\n              <TaskItem\r\n                key={task.id}\r\n                task={task}\r\n                onEdit={handleTaskEdit}\r\n                onDelete={handleDeleteTask}\r\n                onStatusChange={handleStatusChange}\r\n                onShareTask={shareTask}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <Typography variant=\"body1\">No tasks available.</Typography>\r\n        )}\r\n\r\n        {/* Snackbar for error messages */}\r\n        <Snackbar\r\n          open={snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={handleSnackbarClose}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}