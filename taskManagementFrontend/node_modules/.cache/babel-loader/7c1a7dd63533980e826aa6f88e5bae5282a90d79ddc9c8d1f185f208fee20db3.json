{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, fetchTaskById, createTask, updateTask, deleteTask } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskItem from \"./components/TaskItem\";\nimport SideMenu from \"./components/SideMenu\";\nimport { Typography, Container, Button, CircularProgress, Snackbar, Alert } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsPDF } from \"jspdf\";\nimport \"./index.css\";\nimport \"./i18next\";\nimport \"./components/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [lang, setLang] = useState(\"en\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\n\n  // Dummy logout handler (implement actual logic if needed)\n  const handleLogout = () => {\n    console.log(\"Logged out\");\n    alert(\"Logged out\");\n  };\n\n  // Snackbar close handler\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Fetch tasks when component mounts or when the selected entity changes\n  useEffect(() => {\n    const getTasks = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchTasks(selectedEntity);\n        setTasks(data);\n      } catch (error) {\n        setError(\"Error fetching tasks: \" + error.message);\n        setSnackbarOpen(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [selectedEntity]);\n\n  // Handle task creation\n  const handleTaskCreated = async task => {\n    try {\n      // Validate required fields\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\n        setError(\"All fields are required.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await createTask(task);\n      const updatedTasks = await fetchTasks(selectedEntity);\n      setTasks(updatedTasks);\n    } catch (error) {\n      setError(\"Failed to create task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Handle task update\n  const handleTaskUpdate = async updatedTask => {\n    try {\n      if (!updatedTask.id) {\n        setError(\"Task ID is required for update.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Failed to update task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Fetch task for editing\n  const handleTaskEdit = async taskId => {\n    try {\n      const task = await fetchTaskById(taskId);\n      setTaskToEdit(task);\n    } catch (error) {\n      setError(\"Error fetching task for editing: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Clears editing mode after updating\n  const handleEditComplete = () => {\n    setTaskToEdit(null);\n  };\n\n  // Toggle task status\n  const handleStatusChange = async (taskId, status) => {\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      if (!task) {\n        setError(\"Task not found.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      const updatedTask = {\n        ...task,\n        status\n      };\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Error updating task status: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Delete a task\n  const handleDeleteTask = async id => {\n    try {\n      if (!id) {\n        setError(\"Task ID is required for deletion.\");\n        setSnackbarOpen(true);\n        return;\n      }\n      await deleteTask(id);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (error) {\n      setError(\"Error deleting task: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Function to generate and share task PDF via WhatsApp\n  const shareTask = async task => {\n    try {\n      const doc = new jsPDF();\n      doc.text(`Title: ${task.title}`, 10, 20);\n      doc.text(`Description: ${task.description}`, 10, 30);\n      doc.text(`Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`, 10, 40);\n      doc.text(`Status: ${task.status}`, 10, 50);\n      const pdfDataUri = doc.output(\"dataurlstring\");\n      const message = `*Task Details:*\\n` + `*Title:* ${task.title}\\n` + `*Due Date:* ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}\\n` + `*Status:* ${task.status}\\n\\n` + `*Download PDF:* ${pdfDataUri}`;\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(message)}`;\n      window.open(whatsappUrl, \"_blank\");\n    } catch (error) {\n      console.error(\"Error sharing task:\", error);\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n      menuOpen: menuOpen,\n      toggleMenu: () => setMenuOpen(!menuOpen),\n      toggleLanguage: () => {\n        const newLang = lang === \"en\" ? \"ar\" : \"en\";\n        setLang(newLang);\n        i18n.changeLanguage(newLang);\n        document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n      },\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: i18n.t(\"taskManagement\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedEntity(e.target.value),\n      className: \"form-field\",\n      value: selectedEntity,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"User1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"User2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskCreated: handleTaskCreated,\n      taskToEdit: taskToEdit,\n      onEditComplete: handleEditComplete,\n      onUpdateTask: handleTaskUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onEdit: handleTaskEdit,\n        onDelete: handleDeleteTask,\n        onStatusChange: handleStatusChange,\n        onShareTask: shareTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"error\",\n        sx: {\n          width: \"100%\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QCn8xZHKI068VX1tG3k9zQs7LdI=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","fetchTaskById","createTask","updateTask","deleteTask","TaskForm","TaskItem","SideMenu","Typography","Container","Button","CircularProgress","Snackbar","Alert","useTranslation","jsPDF","jsxDEV","_jsxDEV","App","_s","i18n","tasks","setTasks","taskToEdit","setTaskToEdit","loading","setLoading","error","setError","snackbarOpen","setSnackbarOpen","lang","setLang","menuOpen","setMenuOpen","selectedEntity","setSelectedEntity","handleLogout","console","log","alert","handleSnackbarClose","getTasks","data","message","handleTaskCreated","task","title","description","dueDate","entityId","updatedTasks","handleTaskUpdate","updatedTask","id","handleTaskEdit","taskId","handleEditComplete","handleStatusChange","status","find","t","handleDeleteTask","shareTask","doc","text","split","pdfDataUri","output","whatsappUrl","encodeURIComponent","window","open","maxWidth","className","children","toggleMenu","toggleLanguage","newLang","changeLanguage","document","body","dir","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","color","onClick","onChange","e","target","value","onTaskCreated","onEditComplete","onUpdateTask","length","map","onEdit","onDelete","onStatusChange","onShareTask","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTasks, fetchTaskById, createTask, updateTask, deleteTask } from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskItem from \"./components/TaskItem\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport { Typography, Container, Button, CircularProgress, Snackbar, Alert } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"./index.css\";\r\nimport \"./i18next\";\r\nimport \"./components/style.css\";\r\n\r\nconst App = () => {\r\n  const { i18n } = useTranslation();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [lang, setLang] = useState(\"en\");\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\r\n\r\n  // Dummy logout handler (implement actual logic if needed)\r\n  const handleLogout = () => {\r\n    console.log(\"Logged out\");\r\n    alert(\"Logged out\");\r\n  };\r\n\r\n  // Snackbar close handler\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  // Fetch tasks when component mounts or when the selected entity changes\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await fetchTasks(selectedEntity);\r\n        setTasks(data);\r\n      } catch (error) {\r\n        setError(\"Error fetching tasks: \" + error.message);\r\n        setSnackbarOpen(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getTasks();\r\n  }, [selectedEntity]);\r\n\r\n  // Handle task creation\r\n  const handleTaskCreated = async (task) => {\r\n    try {\r\n      // Validate required fields\r\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\r\n        setError(\"All fields are required.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n\r\n      await createTask(task);\r\n      const updatedTasks = await fetchTasks(selectedEntity);\r\n      setTasks(updatedTasks);\r\n    } catch (error) {\r\n      setError(\"Failed to create task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle task update\r\n  const handleTaskUpdate = async (updatedTask) => {\r\n    try {\r\n      if (!updatedTask.id) {\r\n        setError(\"Task ID is required for update.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Failed to update task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Fetch task for editing\r\n  const handleTaskEdit = async (taskId) => {\r\n    try {\r\n      const task = await fetchTaskById(taskId);\r\n      setTaskToEdit(task);\r\n    } catch (error) {\r\n      setError(\"Error fetching task for editing: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Clears editing mode after updating\r\n  const handleEditComplete = () => {\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  // Toggle task status\r\n  const handleStatusChange = async (taskId, status) => {\r\n    try {\r\n      const task = tasks.find((t) => t.id === taskId);\r\n      if (!task) {\r\n        setError(\"Task not found.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      const updatedTask = { ...task, status };\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Error updating task status: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      if (!id) {\r\n        setError(\"Task ID is required for deletion.\");\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await deleteTask(id);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (error) {\r\n      setError(\"Error deleting task: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Function to generate and share task PDF via WhatsApp\r\n  const shareTask = async (task) => {\r\n    try {\r\n      const doc = new jsPDF();\r\n      \r\n      doc.text(`Title: ${task.title}`, 10, 20);\r\n      doc.text(`Description: ${task.description}`, 10, 30);\r\n      doc.text(\r\n        `Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`,\r\n        10,\r\n        40\r\n      );\r\n      doc.text(`Status: ${task.status}`, 10, 50);\r\n\r\n      const pdfDataUri = doc.output(\"dataurlstring\");\r\n\r\n      const message =\r\n        `*Task Details:*\\n` +\r\n        `*Title:* ${task.title}\\n` +\r\n        `*Due Date:* ${\r\n          task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"\r\n        }\\n` +\r\n        `*Status:* ${task.status}\\n\\n` +\r\n        `*Download PDF:* ${pdfDataUri}`;\r\n\r\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(\r\n        message\r\n      )}`;\r\n      window.open(whatsappUrl, \"_blank\");\r\n    } catch (error) {\r\n      console.error(\"Error sharing task:\", error);\r\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"app-container\">\r\n      <SideMenu\r\n        menuOpen={menuOpen}\r\n        toggleMenu={() => setMenuOpen(!menuOpen)}\r\n        toggleLanguage={() => {\r\n          const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n          setLang(newLang);\r\n          i18n.changeLanguage(newLang);\r\n          document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n        }}\r\n        lang={lang}\r\n      />\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {i18n.t(\"taskManagement\")}\r\n      </Typography>\r\n\r\n      {/* Logout Button */}\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleLogout}>\r\n        Logout\r\n      </Button>\r\n\r\n      {/* Entity Selection Dropdown */}\r\n      <select\r\n        onChange={(e) => setSelectedEntity(e.target.value)}\r\n        className=\"form-field\"\r\n        value={selectedEntity}\r\n      >\r\n        <option value=\"\">All Tasks</option>\r\n        <option value=\"1\">User1</option>\r\n        <option value=\"2\">User2</option>\r\n      </select>\r\n\r\n      {/* Task Form */}\r\n      <TaskForm\r\n        onTaskCreated={handleTaskCreated}\r\n        taskToEdit={taskToEdit}\r\n        onEditComplete={handleEditComplete}\r\n        onUpdateTask={handleTaskUpdate}\r\n      />\r\n\r\n      {/* Task List */}\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : tasks.length > 0 ? (\r\n        <div className=\"task-list\">\r\n          {tasks.map((task) => (\r\n            <TaskItem\r\n              key={task.id}\r\n              task={task}\r\n              onEdit={handleTaskEdit}\r\n              onDelete={handleDeleteTask}\r\n              onStatusChange={handleStatusChange}\r\n              onShareTask={shareTask}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Typography variant=\"body1\">No tasks available.</Typography>\r\n      )}\r\n\r\n      {/* Snackbar for error messages */}\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}