{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\"; // Import useTranslation hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onTaskCreated,\n  taskToEdit,\n  onEditComplete\n}) => {\n  _s();\n  const {\n    i18n\n  } = useTranslation(); // Destructure i18n from useTranslation hook\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setDueDate(taskToEdit.dueDate);\n      setStatus(taskToEdit.status);\n    }\n  }, [taskToEdit]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTask = {\n      title,\n      description,\n      dueDate,\n      status\n    };\n\n    // Handle task creation or update\n    if (taskToEdit) {\n      // Handle task edit\n      // Call an API to update task\n    } else {\n      // Call an API to create a new task\n      onTaskCreated();\n    }\n\n    // Reset form after submission\n    setTitle(\"\");\n    setDescription(\"\");\n    setDueDate(\"\");\n    setStatus(\"pending\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: taskToEdit ? i18n.t('edit') : i18n.t('addNewTask')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: i18n.t('title'),\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      fullWidth: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: i18n.t('description'),\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      fullWidth: true,\n      required: true,\n      multiline: true,\n      rows: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: i18n.t('dueDate'),\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      fullWidth: true,\n      required: true,\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-select\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: i18n.t('status')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: status === \"pending\" ? \"default\" : \"secondary\",\n        onClick: () => setStatus(\"pending\"),\n        children: i18n.t('pending')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: status === \"complete\" ? \"primary\" : \"default\",\n        onClick: () => setStatus(\"complete\"),\n        children: i18n.t('complete')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      children: taskToEdit ? i18n.t('update') : i18n.t('create')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"o2/+v/PzWUtyqKT2NsXy0yAp/0Y=\", false, function () {\n  return [useTranslation];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","useTranslation","jsxDEV","_jsxDEV","TaskForm","onTaskCreated","taskToEdit","onEditComplete","_s","i18n","title","setTitle","description","setDescription","dueDate","setDueDate","status","setStatus","handleSubmit","e","preventDefault","newTask","onSubmit","className","children","variant","t","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","target","fullWidth","required","multiline","rows","type","InputLabelProps","shrink","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\"; // Import useTranslation hook\r\n\r\nconst TaskForm = ({ onTaskCreated, taskToEdit, onEditComplete }) => {\r\n  const { i18n } = useTranslation();  // Destructure i18n from useTranslation hook\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n\r\n  useEffect(() => {\r\n    if (taskToEdit) {\r\n      setTitle(taskToEdit.title);\r\n      setDescription(taskToEdit.description);\r\n      setDueDate(taskToEdit.dueDate);\r\n      setStatus(taskToEdit.status);\r\n    }\r\n  }, [taskToEdit]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newTask = { title, description, dueDate, status };\r\n\r\n    // Handle task creation or update\r\n    if (taskToEdit) {\r\n      // Handle task edit\r\n      // Call an API to update task\r\n    } else {\r\n      // Call an API to create a new task\r\n      onTaskCreated();\r\n    }\r\n\r\n    // Reset form after submission\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setDueDate(\"\");\r\n    setStatus(\"pending\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-form\">\r\n      <Typography variant=\"h6\">{taskToEdit ? i18n.t('edit') : i18n.t('addNewTask')}</Typography>\r\n\r\n      <TextField\r\n        label={i18n.t('title')}\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        label={i18n.t('description')}\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        fullWidth\r\n        required\r\n        multiline\r\n        rows={4}\r\n      />\r\n      <TextField\r\n        label={i18n.t('dueDate')}\r\n        type=\"date\"\r\n        value={dueDate}\r\n        onChange={(e) => setDueDate(e.target.value)}\r\n        fullWidth\r\n        required\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <div className=\"status-select\">\r\n        <Typography variant=\"body1\">{i18n.t('status')}</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={status === \"pending\" ? \"default\" : \"secondary\"}\r\n          onClick={() => setStatus(\"pending\")}\r\n        >\r\n          {i18n.t('pending')}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={status === \"complete\" ? \"primary\" : \"default\"}\r\n          onClick={() => setStatus(\"complete\")}\r\n        >\r\n          {i18n.t('complete')}\r\n        </Button>\r\n      </div>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        {taskToEdit ? i18n.t('update') : i18n.t('create')}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}