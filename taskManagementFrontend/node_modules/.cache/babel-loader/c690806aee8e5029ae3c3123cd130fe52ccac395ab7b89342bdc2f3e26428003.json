{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsPDF } from \"jspdf\"; // Ensure correct import of jsPDF library\nimport { useTranslation } from \"react-i18next\";\nimport { SaveAlt } from \"@mui/icons-material\"; // Import icon\nimport \"./styleForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onTaskEdit,\n  onDeleteTask,\n  onStatusChange,\n  tasks\n}) => {\n  _s();\n  // Added tasks as prop\n  const {\n    t\n  } = useTranslation();\n\n  // Function to generate PDF for a single task\n  const generatePDF = () => {\n    if (!task || !task.title || !task.description || !task.dueDate) {\n      console.error(\"Task data is incomplete:\", task); // Log task data for debugging\n      alert(\"Task data is incomplete\");\n      return;\n    }\n    const doc = new jsPDF();\n    doc.text(`Task Title: ${task.title}`, 10, 10);\n    doc.text(`Description: ${task.description}`, 10, 20);\n    doc.text(`Due Date: ${task.dueDate}`, 10, 30);\n    doc.text(`Status: ${task.status}`, 10, 40);\n    doc.save(`${task.title}.pdf`);\n  };\n\n  // Function to generate PDF for all tasks\n  const generateAllPDF = () => {\n    if (!tasks || tasks.length === 0) {\n      alert(\"No tasks available to generate PDF.\");\n      return;\n    }\n    const doc = new jsPDF();\n    tasks.forEach((task, index) => {\n      if (index > 0) doc.addPage(); // Add a new page for each task\n      doc.text(`Task Title: ${task.title}`, 10, 10);\n      doc.text(`Description: ${task.description}`, 10, 20);\n      doc.text(`Due Date: ${task.dueDate}`, 10, 30);\n      doc.text(`Status: ${task.status}`, 10, 40);\n    });\n    doc.save('All_Tasks.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [t(\"dueDate\"), \": \", task.dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [t(\"status\"), \": \", task.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onTaskEdit(task.id),\n        variant: \"contained\",\n        color: \"primary\",\n        children: t(\"edit\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onDeleteTask(task.id),\n        variant: \"contained\",\n        color: \"secondary\",\n        children: t(\"delete\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onStatusChange(task.id, task.status === \"Pending\" ? \"Completed\" : \"Pending\"),\n        variant: \"contained\",\n        color: task.status === \"Pending\" ? \"primary\" : \"success\",\n        children: task.status === \"Pending\" ? t(\"markCompleted\") : t(\"markPending\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: generatePDF,\n        variant: \"contained\",\n        color: \"default\",\n        className: \"save-pdf-button\",\n        children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n          className: \"save-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \" \", t(\"saveAsPDF\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: generateAllPDF,\n        variant: \"contained\",\n        color: \"default\",\n        className: \"save-pdf-button\",\n        children: [/*#__PURE__*/_jsxDEV(SaveAlt, {\n          className: \"save-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", t(\"saveAllAsPDF\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","Button","Typography","jsPDF","useTranslation","SaveAlt","jsxDEV","_jsxDEV","TaskItem","task","onTaskEdit","onDeleteTask","onStatusChange","tasks","_s","t","generatePDF","title","description","dueDate","console","error","alert","doc","text","status","save","generateAllPDF","length","forEach","index","addPage","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","color","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskItem.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { jsPDF } from \"jspdf\";  // Ensure correct import of jsPDF library\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { SaveAlt } from \"@mui/icons-material\"; // Import icon\r\nimport \"./styleForm.css\";\r\n\r\nconst TaskItem = ({ task, onTaskEdit, onDeleteTask, onStatusChange, tasks }) => {  // Added tasks as prop\r\n  const { t } = useTranslation();\r\n\r\n  // Function to generate PDF for a single task\r\n  const generatePDF = () => {\r\n    if (!task || !task.title || !task.description || !task.dueDate) {\r\n      console.error(\"Task data is incomplete:\", task);  // Log task data for debugging\r\n      alert(\"Task data is incomplete\");\r\n      return; \r\n    }\r\n\r\n    const doc = new jsPDF();\r\n    doc.text(`Task Title: ${task.title}`, 10, 10);\r\n    doc.text(`Description: ${task.description}`, 10, 20);\r\n    doc.text(`Due Date: ${task.dueDate}`, 10, 30);\r\n    doc.text(`Status: ${task.status}`, 10, 40);\r\n    doc.save(`${task.title}.pdf`);\r\n  };\r\n\r\n  // Function to generate PDF for all tasks\r\n  const generateAllPDF = () => {\r\n    if (!tasks || tasks.length === 0) {\r\n      alert(\"No tasks available to generate PDF.\");\r\n      return;\r\n    }\r\n\r\n    const doc = new jsPDF();\r\n    tasks.forEach((task, index) => {\r\n      if (index > 0) doc.addPage(); // Add a new page for each task\r\n      doc.text(`Task Title: ${task.title}`, 10, 10);\r\n      doc.text(`Description: ${task.description}`, 10, 20);\r\n      doc.text(`Due Date: ${task.dueDate}`, 10, 30);\r\n      doc.text(`Status: ${task.status}`, 10, 40);\r\n    });\r\n    doc.save('All_Tasks.pdf');\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-item\">\r\n      <Typography variant=\"h6\">{task.title}</Typography>\r\n      <Typography variant=\"body1\">{task.description}</Typography>\r\n      <Typography variant=\"body2\">{t(\"dueDate\")}: {task.dueDate}</Typography>\r\n      <Typography variant=\"body2\">{t(\"status\")}: {task.status}</Typography>\r\n\r\n      {/* Buttons for editing, deleting, and changing task status */}\r\n      <div className=\"task-actions\">\r\n        <Button onClick={() => onTaskEdit(task.id)} variant=\"contained\" color=\"primary\">\r\n          {t(\"edit\")}\r\n        </Button>\r\n        <Button onClick={() => onDeleteTask(task.id)} variant=\"contained\" color=\"secondary\">\r\n          {t(\"delete\")}\r\n        </Button>\r\n        <Button\r\n          onClick={() => onStatusChange(task.id, task.status === \"Pending\" ? \"Completed\" : \"Pending\")}\r\n          variant=\"contained\"\r\n          color={task.status === \"Pending\" ? \"primary\" : \"success\"}\r\n        >\r\n          {task.status === \"Pending\" ? t(\"markCompleted\") : t(\"markPending\")}\r\n        </Button>\r\n\r\n        {/* Button to save task as PDF */}\r\n        <Button onClick={generatePDF} variant=\"contained\" color=\"default\" className=\"save-pdf-button\">\r\n          <SaveAlt className=\"save-icon\" /> {t(\"saveAsPDF\")}\r\n        </Button>\r\n\r\n        {/* Button to save all tasks as PDF */}\r\n        <Button onClick={generateAllPDF} variant=\"contained\" color=\"default\" className=\"save-pdf-button\">\r\n          <SaveAlt className=\"save-icon\" /> {t(\"saveAllAsPDF\")}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}