{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport { Button } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  tasks\n}) => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n\n  // Save a single task as a PDF\n  const saveTaskAsPDF = task => {\n    const doc = new jsPDF();\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(i18n.t(\"taskDetails\"), 10, 10);\n    doc.text(`${i18n.t(\"title\")}: ${task.title}`, 10, 20);\n    doc.text(`${i18n.t(\"description\")}: ${task.description}`, 10, 30);\n    doc.text(`${i18n.t(\"status\")}: ${i18n.t(task.status === \"Pending\" ? \"pending\" : \"completed\")}`, 10, 40);\n    doc.save(`${task.title}.pdf`);\n  };\n\n  // Save all tasks as a single PDF\n  const saveAllTasksAsPDF = () => {\n    const doc = new jsPDF();\n    tasks.forEach((task, index) => {\n      if (index > 0) doc.addPage();\n      doc.setFont(\"helvetica\", \"normal\");\n      doc.text(i18n.t(\"taskDetails\"), 10, 10);\n      doc.text(`${i18n.t(\"title\")}: ${task.title}`, 10, 20);\n      doc.text(`${i18n.t(\"description\")}: ${task.description}`, 10, 30);\n      doc.text(`${i18n.t(\"status\")}: ${i18n.t(task.status === \"Pending\" ? \"pending\" : \"completed\")}`, 10, 40);\n    });\n    doc.save(\"All_Tasks.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: i18n.t(\"taskList\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => saveTaskAsPDF(task),\n        startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this) // Icon for saving a single task\n        ,\n        children: i18n.t(\"saveAsPDF\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: saveAllTasksAsPDF,\n      startIcon: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this) // Icon for saving all tasks\n      ,\n      children: i18n.t(\"saveAllAsPDF\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","jsPDF","Button","SaveIcon","SaveAltIcon","useTranslation","jsxDEV","_jsxDEV","TaskItem","tasks","_s","i18n","saveTaskAsPDF","task","doc","setFont","text","t","title","description","status","save","saveAllTasksAsPDF","forEach","index","addPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","variant","color","onClick","startIcon","id","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskItem.js"],"sourcesContent":["import React from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { Button } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TaskItem = ({ tasks }) => {\r\n  const { i18n } = useTranslation();\r\n\r\n  // Save a single task as a PDF\r\n  const saveTaskAsPDF = (task) => {\r\n    const doc = new jsPDF();\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(i18n.t(\"taskDetails\"), 10, 10);\r\n    doc.text(`${i18n.t(\"title\")}: ${task.title}`, 10, 20);\r\n    doc.text(`${i18n.t(\"description\")}: ${task.description}`, 10, 30);\r\n    doc.text(`${i18n.t(\"status\")}: ${i18n.t(task.status === \"Pending\" ? \"pending\" : \"completed\")}`, 10, 40);\r\n    doc.save(`${task.title}.pdf`);\r\n  };\r\n\r\n  // Save all tasks as a single PDF\r\n  const saveAllTasksAsPDF = () => {\r\n    const doc = new jsPDF();\r\n    tasks.forEach((task, index) => {\r\n      if (index > 0) doc.addPage();\r\n      doc.setFont(\"helvetica\", \"normal\");\r\n      doc.text(i18n.t(\"taskDetails\"), 10, 10);\r\n      doc.text(`${i18n.t(\"title\")}: ${task.title}`, 10, 20);\r\n      doc.text(`${i18n.t(\"description\")}: ${task.description}`, 10, 30);\r\n      doc.text(`${i18n.t(\"status\")}: ${i18n.t(task.status === \"Pending\" ? \"pending\" : \"completed\")}`, 10, 40);\r\n    });\r\n    doc.save(\"All_Tasks.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{i18n.t(\"taskList\")}</h2>\r\n      {tasks.map((task) => (\r\n        <div key={task.id} className=\"task-item\">\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => saveTaskAsPDF(task)}\r\n            startIcon={<SaveIcon />} // Icon for saving a single task\r\n          >\r\n            {i18n.t(\"saveAsPDF\")}\r\n          </Button>\r\n        </div>\r\n      ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={saveAllTasksAsPDF}\r\n        startIcon={<SaveAltIcon />} // Icon for saving all tasks\r\n      >\r\n        {i18n.t(\"saveAllAsPDF\")}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}