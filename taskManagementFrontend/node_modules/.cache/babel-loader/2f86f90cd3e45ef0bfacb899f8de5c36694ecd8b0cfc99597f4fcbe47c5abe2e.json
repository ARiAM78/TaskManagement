{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, fetchTaskById, createTask, updateTask, deleteTask, searchTasks, fetchTasksByCategory } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskItem from \"./components/TaskItem\";\nimport SideMenu from \"./components/SideMenu\";\nimport { Typography, Container, Button, CircularProgress, Snackbar, Alert, TextField, MenuItem } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsPDF } from \"jspdf\";\nimport \"./index.css\";\nimport \"./i18next\";\nimport \"./components/style.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\n\n// LoginPage Component for user selection with translation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  setUserRole\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: t(\"selectAUser\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      onClick: () => setUserRole(\"admin\"),\n      children: t(\"admin\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      onClick: () => setUserRole(\"user1\"),\n      children: t(\"user1\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: () => setUserRole(\"user2\"),\n      children: t(\"user2\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = LoginPage;\nconst App = () => {\n  _s2();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const [userRole, setUserRole] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [lang, setLang] = useState(\"en\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedClassification, setSelectedClassification] = useState(\"\"); // New state for classification filter\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Fetch tasks when component mounts or when the selected entity, search query, or classification filter changes\n  useEffect(() => {\n    if (!userRole) return;\n    const getTasks = async () => {\n      setLoading(true);\n      try {\n        let data = [];\n        if (searchQuery.trim() !== \"\") {\n          // If search query is provided, use searchTasks API\n          data = await searchTasks(searchQuery);\n        } else if (selectedClassification !== \"\") {\n          // If classification filter is applied, use fetchTasksByCategory API\n          data = await fetchTasksByCategory(selectedClassification);\n        } else {\n          // Otherwise fetch all tasks (optionally filtered by entity)\n          data = await fetchTasks(selectedEntity);\n        }\n        setTasks(data);\n      } catch (err) {\n        setError(t(\"errorFetchingTasks\") + \" \" + err.message);\n        setSnackbarOpen(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTasks();\n  }, [selectedEntity, userRole, t, searchQuery, selectedClassification]);\n\n  // Automatically set the selected entity based on the logged in user (if not admin)\n  useEffect(() => {\n    if (!userRole) return;\n    if (userRole.toLowerCase() !== \"admin\") {\n      const mapping = {\n        user1: \"1\",\n        user2: \"2\"\n      };\n      setSelectedEntity(mapping[userRole.toLowerCase()] || \"\");\n    }\n  }, [userRole]);\n\n  // Handle task creation\n  const handleTaskCreated = async task => {\n    try {\n      // Automatically assign entityId for non-admin users\n      if (userRole.toLowerCase() !== \"admin\") {\n        const mapping = {\n          user1: \"1\",\n          user2: \"2\"\n        };\n        task.entityId = mapping[userRole.toLowerCase()] || \"\";\n      }\n      // Validate required fields\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\n        setError(t(\"allFieldsRequired\"));\n        setSnackbarOpen(true);\n        return;\n      }\n      await createTask(task);\n      const updatedTasks = await fetchTasks(selectedEntity);\n      setTasks(updatedTasks);\n    } catch (err) {\n      setError(t(\"failedCreateTask\") + \" \" + err.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Handle task update\n  const handleTaskUpdate = async updatedTask => {\n    try {\n      if (!updatedTask.id) {\n        setError(t(\"taskIdRequiredUpdate\"));\n        setSnackbarOpen(true);\n        return;\n      }\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (err) {\n      setError(t(\"failedUpdateTask\") + \" \" + err.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Fetch task for editing\n  const handleTaskEdit = async taskId => {\n    try {\n      const task = await fetchTaskById(taskId);\n      setTaskToEdit(task);\n    } catch (err) {\n      setError(t(\"errorFetchingTaskEdit\") + \" \" + err.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Clears editing mode after updating\n  const handleEditComplete = () => {\n    setTaskToEdit(null);\n  };\n\n  // Toggle task status\n  const handleStatusChange = async (taskId, status) => {\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      if (!task) {\n        setError(t(\"taskNotFound\"));\n        setSnackbarOpen(true);\n        return;\n      }\n      const updatedTask = {\n        ...task,\n        status\n      };\n      await updateTask(updatedTask);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (err) {\n      setError(t(\"errorUpdatingStatus\") + \" \" + err.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Delete a task\n  const handleDeleteTask = async id => {\n    try {\n      if (!id) {\n        setError(t(\"taskIdRequiredDeletion\"));\n        setSnackbarOpen(true);\n        return;\n      }\n      await deleteTask(id);\n      const data = await fetchTasks(selectedEntity);\n      setTasks(data);\n    } catch (err) {\n      setError(t(\"errorDeletingTask\") + \" \" + err.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // Function to generate and share task PDF via WhatsApp\n  const shareTask = async task => {\n    try {\n      const doc = new jsPDF();\n      doc.text(`Title: ${task.title}`, 10, 20);\n      doc.text(`Description: ${task.description}`, 10, 30);\n      doc.text(`Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`, 10, 40);\n      doc.text(`Status: ${task.status}`, 10, 50);\n      const pdfDataUri = doc.output(\"dataurlstring\");\n      const message = `*Task Details:*\\n` + `*Title:* ${task.title}\\n` + `*Due Date:* ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}\\n` + `*Status:* ${task.status}\\n\\n` + `*Download PDF:* ${pdfDataUri}`;\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(message)}`;\n      window.open(whatsappUrl, \"_blank\");\n    } catch (error) {\n      console.error(\"Error sharing task:\", error);\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\n      setSnackbarOpen(true);\n    }\n  };\n\n  // If user is not logged in, show the LoginPage\n  if (!userRole) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      setUserRole: setUserRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          className: \"app-container\",\n          children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n            menuOpen: menuOpen,\n            toggleMenu: () => setMenuOpen(!menuOpen),\n            toggleLanguage: () => {\n              const newLang = lang === \"en\" ? \"ar\" : \"en\";\n              setLang(newLang);\n              i18n.changeLanguage(newLang);\n              document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n            },\n            lang: lang,\n            userRole: userRole,\n            onLogout: () => setUserRole(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n            userRole: userRole,\n            selectedEntity: selectedEntity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          className: \"app-container\",\n          children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n            menuOpen: menuOpen,\n            toggleMenu: () => setMenuOpen(!menuOpen),\n            toggleLanguage: () => {\n              const newLang = lang === \"en\" ? \"ar\" : \"en\";\n              setLang(newLang);\n              i18n.changeLanguage(newLang);\n              document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n            },\n            lang: lang,\n            userRole: userRole,\n            onLogout: () => setUserRole(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), userRole.toLowerCase() === \"admin\" && /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedEntity(e.target.value),\n            className: \"form-field\",\n            value: selectedEntity,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: t(\"allTasks\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: t(\"user1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: t(\"user2\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n            onTaskCreated: handleTaskCreated,\n            taskToEdit: taskToEdit,\n            onEditComplete: handleEditComplete,\n            onUpdateTask: handleTaskUpdate,\n            userRole: userRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: t(\"searchTasks\") || \"Search Tasks\",\n              variant: \"outlined\",\n              fullWidth: true,\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              className: \"search-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: t(\"category\"),\n            variant: \"outlined\",\n            fullWidth: true,\n            value: selectedClassification,\n            onChange: e => setSelectedClassification(e.target.value),\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: t(\"allCategories\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Professional\",\n              children: t(\"professional\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Academic\",\n              children: t(\"academic\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Appointments\",\n              children: t(\"appointments\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this) : tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-list\",\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n              task: task,\n              onEdit: handleTaskEdit,\n              onDelete: handleDeleteTask,\n              onStatusChange: handleStatusChange,\n              onShareTask: shareTask,\n              userRole: userRole\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: t(\"noTasksAvailable\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: snackbarOpen,\n            autoHideDuration: 6000,\n            onClose: handleSnackbarClose,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              onClose: handleSnackbarClose,\n              severity: \"error\",\n              sx: {\n                width: \"100%\"\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"wfx9P6Zy71PniBlxEOuhu71EHY8=\", false, function () {\n  return [useTranslation];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","fetchTaskById","createTask","updateTask","deleteTask","searchTasks","fetchTasksByCategory","TaskForm","TaskItem","SideMenu","Typography","Container","Button","CircularProgress","Snackbar","Alert","TextField","MenuItem","useTranslation","jsPDF","BrowserRouter","Router","Routes","Route","Dashboard","jsxDEV","_jsxDEV","LoginPage","setUserRole","_s","t","maxWidth","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","fullWidth","style","marginBottom","onClick","_c","App","_s2","i18n","userRole","tasks","setTasks","taskToEdit","setTaskToEdit","loading","setLoading","error","setError","snackbarOpen","setSnackbarOpen","lang","setLang","menuOpen","setMenuOpen","selectedEntity","setSelectedEntity","searchQuery","setSearchQuery","selectedClassification","setSelectedClassification","handleSnackbarClose","getTasks","data","trim","err","message","toLowerCase","mapping","user1","user2","handleTaskCreated","task","entityId","title","description","dueDate","updatedTasks","handleTaskUpdate","updatedTask","id","handleTaskEdit","taskId","handleEditComplete","handleStatusChange","status","find","handleDeleteTask","shareTask","doc","text","split","pdfDataUri","output","whatsappUrl","encodeURIComponent","window","open","console","path","element","toggleMenu","toggleLanguage","newLang","changeLanguage","document","body","dir","onLogout","onChange","e","target","value","onTaskCreated","onEditComplete","onUpdateTask","label","select","margin","length","map","onEdit","onDelete","onStatusChange","onShareTask","autoHideDuration","onClose","severity","sx","width","_c2","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTasks, fetchTaskById, createTask, updateTask, deleteTask, searchTasks, fetchTasksByCategory } from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskItem from \"./components/TaskItem\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport { Typography, Container, Button, CircularProgress, Snackbar, Alert, TextField, MenuItem } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"./index.css\";\r\nimport \"./i18next\";\r\nimport \"./components/style.css\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\n// LoginPage Component for user selection with translation\r\nconst LoginPage = ({ setUserRole }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"app-container\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {t(\"selectAUser\")}\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        style={{ marginBottom: \"1rem\" }}\r\n        onClick={() => setUserRole(\"admin\")}\r\n      >\r\n        {t(\"admin\")}\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        style={{ marginBottom: \"1rem\" }}\r\n        onClick={() => setUserRole(\"user1\")}\r\n      >\r\n        {t(\"user1\")}\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={() => setUserRole(\"user2\")}\r\n      >\r\n        {t(\"user2\")}\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const { i18n, t } = useTranslation();\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [lang, setLang] = useState(\"en\");\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [selectedEntity, setSelectedEntity] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedClassification, setSelectedClassification] = useState(\"\"); // New state for classification filter\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  // Fetch tasks when component mounts or when the selected entity, search query, or classification filter changes\r\n  useEffect(() => {\r\n    if (!userRole) return;\r\n    const getTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let data = [];\r\n        if (searchQuery.trim() !== \"\") {\r\n          // If search query is provided, use searchTasks API\r\n          data = await searchTasks(searchQuery);\r\n        } else if (selectedClassification !== \"\") {\r\n          // If classification filter is applied, use fetchTasksByCategory API\r\n          data = await fetchTasksByCategory(selectedClassification);\r\n        } else {\r\n          // Otherwise fetch all tasks (optionally filtered by entity)\r\n          data = await fetchTasks(selectedEntity);\r\n        }\r\n        setTasks(data);\r\n      } catch (err) {\r\n        setError(t(\"errorFetchingTasks\") + \" \" + err.message);\r\n        setSnackbarOpen(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getTasks();\r\n  }, [selectedEntity, userRole, t, searchQuery, selectedClassification]);\r\n\r\n  // Automatically set the selected entity based on the logged in user (if not admin)\r\n  useEffect(() => {\r\n    if (!userRole) return;\r\n    if (userRole.toLowerCase() !== \"admin\") {\r\n      const mapping = {\r\n        user1: \"1\",\r\n        user2: \"2\"\r\n      };\r\n      setSelectedEntity(mapping[userRole.toLowerCase()] || \"\");\r\n    }\r\n  }, [userRole]);\r\n\r\n  // Handle task creation\r\n  const handleTaskCreated = async (task) => {\r\n    try {\r\n      // Automatically assign entityId for non-admin users\r\n      if (userRole.toLowerCase() !== \"admin\") {\r\n        const mapping = {\r\n          user1: \"1\",\r\n          user2: \"2\"\r\n        };\r\n        task.entityId = mapping[userRole.toLowerCase()] || \"\";\r\n      }\r\n      // Validate required fields\r\n      if (!task.title || !task.description || !task.dueDate || !task.entityId) {\r\n        setError(t(\"allFieldsRequired\"));\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await createTask(task);\r\n      const updatedTasks = await fetchTasks(selectedEntity);\r\n      setTasks(updatedTasks);\r\n    } catch (err) {\r\n      setError(t(\"failedCreateTask\") + \" \" + err.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Handle task update\r\n  const handleTaskUpdate = async (updatedTask) => {\r\n    try {\r\n      if (!updatedTask.id) {\r\n        setError(t(\"taskIdRequiredUpdate\"));\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (err) {\r\n      setError(t(\"failedUpdateTask\") + \" \" + err.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Fetch task for editing\r\n  const handleTaskEdit = async (taskId) => {\r\n    try {\r\n      const task = await fetchTaskById(taskId);\r\n      setTaskToEdit(task);\r\n    } catch (err) {\r\n      setError(t(\"errorFetchingTaskEdit\") + \" \" + err.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Clears editing mode after updating\r\n  const handleEditComplete = () => {\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  // Toggle task status\r\n  const handleStatusChange = async (taskId, status) => {\r\n    try {\r\n      const task = tasks.find((t) => t.id === taskId);\r\n      if (!task) {\r\n        setError(t(\"taskNotFound\"));\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      const updatedTask = { ...task, status };\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (err) {\r\n      setError(t(\"errorUpdatingStatus\") + \" \" + err.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      if (!id) {\r\n        setError(t(\"taskIdRequiredDeletion\"));\r\n        setSnackbarOpen(true);\r\n        return;\r\n      }\r\n      await deleteTask(id);\r\n      const data = await fetchTasks(selectedEntity);\r\n      setTasks(data);\r\n    } catch (err) {\r\n      setError(t(\"errorDeletingTask\") + \" \" + err.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // Function to generate and share task PDF via WhatsApp\r\n  const shareTask = async (task) => {\r\n    try {\r\n      const doc = new jsPDF();\r\n      doc.text(`Title: ${task.title}`, 10, 20);\r\n      doc.text(`Description: ${task.description}`, 10, 30);\r\n      doc.text(\r\n        `Due Date: ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}`,\r\n        10,\r\n        40\r\n      );\r\n      doc.text(`Status: ${task.status}`, 10, 50);\r\n      const pdfDataUri = doc.output(\"dataurlstring\");\r\n      const message =\r\n        `*Task Details:*\\n` +\r\n        `*Title:* ${task.title}\\n` +\r\n        `*Due Date:* ${task.dueDate ? task.dueDate.split(\"T\")[0] : \"N/A\"}\\n` +\r\n        `*Status:* ${task.status}\\n\\n` +\r\n        `*Download PDF:* ${pdfDataUri}`;\r\n      const whatsappUrl = `https://wa.me/966582144870?text=${encodeURIComponent(\r\n        message\r\n      )}`;\r\n      window.open(whatsappUrl, \"_blank\");\r\n    } catch (error) {\r\n      console.error(\"Error sharing task:\", error);\r\n      setError(\"Failed to share task via WhatsApp: \" + error.message);\r\n      setSnackbarOpen(true);\r\n    }\r\n  };\r\n\r\n  // If user is not logged in, show the LoginPage\r\n  if (!userRole) {\r\n    return <LoginPage setUserRole={setUserRole} />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Dashboard route wrapped in Container with SideMenu */}\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            <Container maxWidth=\"sm\" className=\"app-container\">\r\n              <SideMenu\r\n                menuOpen={menuOpen}\r\n                toggleMenu={() => setMenuOpen(!menuOpen)}\r\n                toggleLanguage={() => {\r\n                  const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n                  setLang(newLang);\r\n                  i18n.changeLanguage(newLang);\r\n                  document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n                }}\r\n                lang={lang}\r\n                userRole={userRole}\r\n                onLogout={() => setUserRole(null)}\r\n              />\r\n              <Dashboard userRole={userRole} selectedEntity={selectedEntity} />\r\n            </Container>\r\n          }\r\n        />\r\n        {/* Default route for main content */}\r\n        <Route\r\n          path=\"/*\"\r\n          element={\r\n            <Container maxWidth=\"sm\" className=\"app-container\">\r\n              <SideMenu\r\n                menuOpen={menuOpen}\r\n                toggleMenu={() => setMenuOpen(!menuOpen)}\r\n                toggleLanguage={() => {\r\n                  const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n                  setLang(newLang);\r\n                  i18n.changeLanguage(newLang);\r\n                  document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n                }}\r\n                lang={lang}\r\n                userRole={userRole}\r\n                onLogout={() => setUserRole(null)}\r\n              />\r\n\r\n              {/* Show entity selection dropdown only for Admin */}\r\n              {userRole.toLowerCase() === \"admin\" && (\r\n                <select\r\n                  onChange={(e) => setSelectedEntity(e.target.value)}\r\n                  className=\"form-field\"\r\n                  value={selectedEntity}\r\n                >\r\n                  <option value=\"\">{t(\"allTasks\")}</option>\r\n                  <option value=\"1\">{t(\"user1\")}</option>\r\n                  <option value=\"2\">{t(\"user2\")}</option>\r\n                </select>\r\n              )}\r\n\r\n              {/* Task Form */}\r\n              <TaskForm\r\n                onTaskCreated={handleTaskCreated}\r\n                taskToEdit={taskToEdit}\r\n                onEditComplete={handleEditComplete}\r\n                onUpdateTask={handleTaskUpdate}\r\n                userRole={userRole}\r\n              />\r\n\r\n              <div className=\"search-container\">\r\n                <TextField\r\n                  label={t(\"searchTasks\") || \"Search Tasks\"}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  className=\"search-field\"\r\n                />\r\n              </div>\r\n\r\n              {/* Classification Dropdown Filter */}\r\n              <TextField\r\n                select\r\n                label={t(\"category\")}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={selectedClassification}\r\n                onChange={(e) => setSelectedClassification(e.target.value)}\r\n                margin=\"normal\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>{t(\"allCategories\")}</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"Professional\">{t(\"professional\")}</MenuItem>\r\n                <MenuItem value=\"Academic\">{t(\"academic\")}</MenuItem>\r\n                <MenuItem value=\"Appointments\">{t(\"appointments\")}</MenuItem>\r\n              </TextField>\r\n\r\n              {/* Task List */}\r\n              {loading ? (\r\n                <CircularProgress />\r\n              ) : tasks.length > 0 ? (\r\n                <div className=\"task-list\">\r\n                  {tasks.map((task) => (\r\n                    <TaskItem\r\n                      key={task.id}\r\n                      task={task}\r\n                      onEdit={handleTaskEdit}\r\n                      onDelete={handleDeleteTask}\r\n                      onStatusChange={handleStatusChange}\r\n                      onShareTask={shareTask}\r\n                      userRole={userRole}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <Typography variant=\"body1\">{t(\"noTasksAvailable\")}</Typography>\r\n              )}\r\n\r\n              {/* Snackbar for error messages */}\r\n              <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n                  {error}\r\n                </Alert>\r\n              </Snackbar>\r\n            </Container>\r\n          }\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}