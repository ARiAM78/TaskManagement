{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { jsPDF } from \"jspdf\"; // تأكد من استيراد المكتبة\nimport { useTranslation } from \"react-i18next\";\nimport \"./styleForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onTaskEdit,\n  onDeleteTask,\n  onStatusChange\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n\n  // Function to generate PDF\n  const generatePDF = () => {\n    if (!task || !task.title || !task.description || !task.dueDate) {\n      console.error(\"Task data is incomplete\");\n      return; // If task data is incomplete, exit\n    }\n    const doc = new jsPDF();\n\n    // Add task details to PDF\n    doc.text(`Task Title: ${task.title}`, 10, 10);\n    doc.text(`Description: ${task.description}`, 10, 20);\n    doc.text(`Due Date: ${task.dueDate}`, 10, 30);\n    doc.text(`Status: ${task.status}`, 10, 40);\n\n    // Save the PDF\n    doc.save(`${task.title}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [t(\"dueDate\"), \": \", task.dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [t(\"status\"), \": \", task.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onTaskEdit(task.id),\n      variant: \"contained\",\n      color: \"primary\",\n      children: t(\"edit\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onDeleteTask(task.id),\n      variant: \"contained\",\n      color: \"secondary\",\n      children: t(\"delete\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => onStatusChange(task.id, task.status === \"Pending\" ? \"Completed\" : \"Pending\"),\n      variant: \"contained\",\n      color: task.status === \"Pending\" ? \"primary\" : \"success\",\n      children: task.status === \"Pending\" ? t(\"markCompleted\") : t(\"markPending\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generatePDF,\n      variant: \"contained\",\n      color: \"default\",\n      children: t(\"saveAsPDF\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","Button","Typography","jsPDF","useTranslation","jsxDEV","_jsxDEV","TaskItem","task","onTaskEdit","onDeleteTask","onStatusChange","_s","t","generatePDF","title","description","dueDate","console","error","doc","text","status","save","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","color","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/components/TaskForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { jsPDF } from \"jspdf\"; // تأكد من استيراد المكتبة\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./styleForm.css\";\r\n\r\nconst TaskItem = ({ task, onTaskEdit, onDeleteTask, onStatusChange }) => {\r\n  const { t } = useTranslation();\r\n\r\n  // Function to generate PDF\r\n  const generatePDF = () => {\r\n    if (!task || !task.title || !task.description || !task.dueDate) {\r\n      console.error(\"Task data is incomplete\");\r\n      return; // If task data is incomplete, exit\r\n    }\r\n\r\n    const doc = new jsPDF();\r\n\r\n    // Add task details to PDF\r\n    doc.text(`Task Title: ${task.title}`, 10, 10);\r\n    doc.text(`Description: ${task.description}`, 10, 20);\r\n    doc.text(`Due Date: ${task.dueDate}`, 10, 30);\r\n    doc.text(`Status: ${task.status}`, 10, 40);\r\n\r\n    // Save the PDF\r\n    doc.save(`${task.title}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-item\">\r\n      <Typography variant=\"h6\">{task.title}</Typography>\r\n      <Typography variant=\"body1\">{task.description}</Typography>\r\n      <Typography variant=\"body2\">{t(\"dueDate\")}: {task.dueDate}</Typography>\r\n      <Typography variant=\"body2\">{t(\"status\")}: {task.status}</Typography>\r\n\r\n      {/* Buttons for editing, deleting and status change */}\r\n      <Button onClick={() => onTaskEdit(task.id)} variant=\"contained\" color=\"primary\">\r\n        {t(\"edit\")}\r\n      </Button>\r\n      <Button onClick={() => onDeleteTask(task.id)} variant=\"contained\" color=\"secondary\">\r\n        {t(\"delete\")}\r\n      </Button>\r\n      <Button\r\n        onClick={() => onStatusChange(task.id, task.status === \"Pending\" ? \"Completed\" : \"Pending\")}\r\n        variant=\"contained\"\r\n        color={task.status === \"Pending\" ? \"primary\" : \"success\"}\r\n      >\r\n        {task.status === \"Pending\" ? t(\"markCompleted\") : t(\"markPending\")}\r\n      </Button>\r\n\r\n      {/* Button to save task as PDF */}\r\n      <Button onClick={generatePDF} variant=\"contained\" color=\"default\">\r\n        {t(\"saveAsPDF\")}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}