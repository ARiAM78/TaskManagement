{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryam\\\\Desktop\\\\TaskManagement\\\\taskManagementFrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTasks, fetchTaskById, updateTask, deleteTask } from \"./api\";\nimport TaskForm from \"./components/TaskForm\";\nimport { Button, Typography, Container } from \"@mui/material\";\nimport SideMenu from \"./components/SideMenu\";\nimport { useTranslation } from 'react-i18next';\nimport \"./index.css\";\nimport './i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [lang, setLang] = useState(\"en\");\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    const getTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch tasks after task creation\n  const handleTaskCreated = () => {\n    const getTasks = async () => {\n      const data = await fetchTasks();\n      setTasks(data);\n    };\n    getTasks();\n  };\n\n  // Edit selected task\n  const handleTaskEdit = async taskId => {\n    try {\n      const task = await fetchTaskById(taskId);\n      setTaskToEdit(task);\n    } catch (error) {\n      console.error(\"Error fetching task for editing:\", error);\n    }\n  };\n\n  // Clear task after editing\n  const handleEditComplete = () => {\n    setTaskToEdit(null);\n  };\n\n  // Update task status\n  const handleStatusChange = async (taskId, status) => {\n    const updatedTask = tasks.find(task => task.id === taskId);\n    if (updatedTask) {\n      updatedTask.status = status;\n      await updateTask(updatedTask);\n      const data = await fetchTasks();\n      setTasks(data);\n    }\n  };\n\n  // Delete task\n  const handleDeleteTask = async id => {\n    await deleteTask(id);\n    const data = await fetchTasks();\n    setTasks(data);\n  };\n\n  // Toggle language\n  const toggleLanguage = () => {\n    const newLang = lang === \"en\" ? \"ar\" : \"en\";\n    setLang(newLang);\n    i18n.changeLanguage(newLang);\n    document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\n  };\n\n  // Toggle side menu\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n      menuOpen: menuOpen,\n      toggleMenu: toggleMenu,\n      toggleLanguage: toggleLanguage,\n      lang: lang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: i18n.t('taskManagement')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskCreated: handleTaskCreated,\n      taskToEdit: taskToEdit,\n      onEditComplete: handleEditComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [i18n.t('dueDate'), \": \", new Date(task.dueDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [i18n.t('status'), \": \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleTaskEdit(task.id),\n            style: {\n              width: '100%',\n              backgroundColor: '#4A628A',\n              marginBottom: '10px'\n            },\n            children: i18n.t('edit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => handleDeleteTask(task.id),\n            style: {\n              width: '100%',\n              backgroundColor: '#8B0000'\n            },\n            children: i18n.t('delete')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ezha8rg9ZuPeyDDUc5lTQs/s0Ac=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTasks","fetchTaskById","updateTask","deleteTask","TaskForm","Button","Typography","Container","SideMenu","useTranslation","jsxDEV","_jsxDEV","App","_s","i18n","tasks","setTasks","taskToEdit","setTaskToEdit","lang","setLang","menuOpen","setMenuOpen","getTasks","data","handleTaskCreated","handleTaskEdit","taskId","task","error","console","handleEditComplete","handleStatusChange","status","updatedTask","find","id","handleDeleteTask","toggleLanguage","newLang","changeLanguage","document","body","dir","toggleMenu","maxWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","t","onTaskCreated","onEditComplete","map","title","description","Date","dueDate","toLocaleDateString","color","onClick","style","width","backgroundColor","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Aryam/Desktop/TaskManagement/taskManagementFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchTasks, fetchTaskById, updateTask, deleteTask } from \"./api\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport { Button, Typography, Container } from \"@mui/material\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport \"./index.css\";\r\nimport './i18next';\r\n\r\nconst App = () => {\r\n  const { i18n } = useTranslation();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  const [lang, setLang] = useState(\"en\");\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  // Fetch tasks on component mount\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n    getTasks();\r\n  }, []);\r\n\r\n  // Fetch tasks after task creation\r\n  const handleTaskCreated = () => {\r\n    const getTasks = async () => {\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    };\r\n    getTasks();\r\n  };\r\n\r\n  // Edit selected task\r\n  const handleTaskEdit = async (taskId) => {\r\n    try {\r\n      const task = await fetchTaskById(taskId);\r\n      setTaskToEdit(task);\r\n    } catch (error) {\r\n      console.error(\"Error fetching task for editing:\", error);\r\n    }\r\n  };\r\n\r\n  // Clear task after editing\r\n  const handleEditComplete = () => {\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  // Update task status\r\n  const handleStatusChange = async (taskId, status) => {\r\n    const updatedTask = tasks.find((task) => task.id === taskId);\r\n    if (updatedTask) {\r\n      updatedTask.status = status;\r\n      await updateTask(updatedTask);\r\n      const data = await fetchTasks();\r\n      setTasks(data);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const handleDeleteTask = async (id) => {\r\n    await deleteTask(id);\r\n    const data = await fetchTasks();\r\n    setTasks(data);\r\n  };\r\n\r\n  // Toggle language\r\n  const toggleLanguage = () => {\r\n    const newLang = lang === \"en\" ? \"ar\" : \"en\";\r\n    setLang(newLang);\r\n    i18n.changeLanguage(newLang);\r\n    document.body.dir = newLang === \"ar\" ? \"rtl\" : \"ltr\";\r\n  };\r\n\r\n  // Toggle side menu\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"app-container\">\r\n      <SideMenu menuOpen={menuOpen} toggleMenu={toggleMenu} toggleLanguage={toggleLanguage} lang={lang} />\r\n\r\n      {/* Translating the title */}\r\n      <Typography variant=\"h4\" gutterBottom>{i18n.t('taskManagement')}</Typography>\r\n\r\n      {/* Task Form Component */}\r\n      <TaskForm \r\n        onTaskCreated={handleTaskCreated} \r\n        taskToEdit={taskToEdit} \r\n        onEditComplete={handleEditComplete} \r\n      />\r\n\r\n      {/* Display tasks */}\r\n      <div className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <div key={task.id} className=\"task-item\">\r\n            {/* Translating task details */}\r\n            <Typography variant=\"h6\">{task.title}</Typography>\r\n            <Typography variant=\"body1\">{task.description}</Typography>\r\n            <Typography variant=\"body2\">{i18n.t('dueDate')}: {new Date(task.dueDate).toLocaleDateString()}</Typography>\r\n            <Typography variant=\"body2\">{i18n.t('status')}: {task.status}</Typography>\r\n\r\n            <div className=\"task-actions\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => handleTaskEdit(task.id)}\r\n                style={{ width: '100%', backgroundColor: '#4A628A', marginBottom: '10px' }}\r\n              >\r\n                {i18n.t('edit')}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleDeleteTask(task.id)}\r\n                style={{ width: '100%', backgroundColor: '#8B0000' }}\r\n              >\r\n                {i18n.t('delete')}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}